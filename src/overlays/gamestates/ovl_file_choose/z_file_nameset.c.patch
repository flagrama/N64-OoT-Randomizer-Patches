diff --git a/src/overlays/gamestates/ovl_file_choose/z_file_nameset.c b/src/overlays/gamestates/ovl_file_choose/z_file_nameset.c
index bc7ae7edc..4f611c524 100644
--- a/src/overlays/gamestates/ovl_file_choose/z_file_nameset.c
+++ b/src/overlays/gamestates/ovl_file_choose/z_file_nameset.c
@@ -46,7 +46,7 @@ void FileSelect_DrawCharacterTransition(GraphicsContext* gfxCtx, void* texture1,
 #if OOT_PAL

 #if OOT_VERSION >= PAL_1_1
-s16 D_808124C0[] = {
+s16 fileNameCharWidth[] = {
     2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 0, 1, 1, 2, 1, 1, 4, 2, 2, 2, 1, 1, 0, 2, 0, 1, 1, 1, 1, 1, 0,
     1, 1, 1, 2, 2, 2, 2, 2, 3, 2, 2, 4, 3, 2, 4, 1, 2, 2, 1, 1, 2, 2, 3, 2, 2, 0, 2, 2, 2, 0, 3, 1, 0,
 };
@@ -268,7 +268,7 @@ void FileSelect_SetNameEntryVtx(GameState* thisx) {
             temp = this->fileNames[this->buttonIndex][phi_s0 - 1];

             this->nameEntryVtx[phi_t1].v.ob[0] = this->nameEntryVtx[phi_t1 + 2].v.ob[0] =
-                D_808125EC[phi_s0] + this->nameEntryBoxPosX + D_808124C0[temp];
+                D_808125EC[phi_s0] + this->nameEntryBoxPosX + fileNameCharWidth[temp];
 #else
             this->nameEntryVtx[phi_t1].v.ob[0] = this->nameEntryVtx[phi_t1 + 2].v.ob[0] =
                 D_808125EC[phi_s0] + this->nameEntryBoxPosX;
@@ -1355,11 +1355,12 @@ void FileSelect_UpdateOptionsMenu(GameState* thisx) {
         Audio_PlaySfxGeneral(NA_SE_SY_FSEL_DECIDE_L, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
                              &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
         this->configMode = CM_OPTIONS_TO_MAIN;
-        sramCtx->readBuff[0] = gSaveContext.soundSetting;
-        sramCtx->readBuff[1] = gSaveContext.zTargetSetting;
+        sramCtx->readBuff[SRAM_HEADER_SOUND] = gSaveContext.soundSetting;
+        sramCtx->readBuff[SRAM_HEADER_Z_TARGET] = gSaveContext.zTargetSetting;
 #if OOT_PAL_N64
-        sramCtx->readBuff[2] = gSaveContext.language;
+        sramCtx->readBuff[SRAM_HEADER_LANGUAGE] = gSaveContext.language;
 #endif
+        sramCtx->readBuff[SRAM_HEADER_QUICKTEXT] = gSaveContext.quicktextSetting;
         PRINTF("ＳＡＶＥ");
         Sram_WriteSramHeader(sramCtx);
         PRINTF_COLOR_YELLOW();
@@ -1385,19 +1386,10 @@ void FileSelect_UpdateOptionsMenu(GameState* thisx) {
             if (gSaveContext.soundSetting > 0xF0) {
                 gSaveContext.soundSetting = SOUND_SETTING_SURROUND;
             }
-        } else {
-#if !OOT_PAL_N64
+        } else if (sSelectedSetting == FS_SETTING_TARGET) {
             gSaveContext.zTargetSetting ^= 1;
-#else
-            if (sSelectedSetting == FS_SETTING_TARGET) {
-                gSaveContext.zTargetSetting ^= 1;
-            } else {
-                gSaveContext.language--;
-                if (gSaveContext.language >= LANGUAGE_MAX) {
-                    gSaveContext.language = LANGUAGE_MAX - 1;
-                }
-            }
-#endif
+        } else {
+            gSaveContext.quicktextSetting ^= 1;
         }
     } else if (this->stickAdjX > 30) {
         Audio_PlaySfxGeneral(NA_SE_SY_FSEL_CURSOR, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
@@ -1409,19 +1401,10 @@ void FileSelect_UpdateOptionsMenu(GameState* thisx) {
             if (gSaveContext.soundSetting > SOUND_SETTING_SURROUND) {
                 gSaveContext.soundSetting = SOUND_SETTING_STEREO;
             }
-        } else {
-#if !OOT_PAL_N64
+        } else if (sSelectedSetting == FS_SETTING_TARGET) {
             gSaveContext.zTargetSetting ^= 1;
-#else
-            if (sSelectedSetting == FS_SETTING_TARGET) {
-                gSaveContext.zTargetSetting ^= 1;
-            } else {
-                gSaveContext.language++;
-                if (gSaveContext.language >= LANGUAGE_MAX) {
-                    gSaveContext.language = 0;
-                }
-            }
-#endif
+        } else {
+            gSaveContext.quicktextSetting ^= 1;
         }
     }

@@ -1521,9 +1504,9 @@ static OptionsMenuTextureInfo sOptionsMenuHeaders[] = {
     { { gFileSelSOUNDENGTex, gFileSelSOUNDENGTex, gFileSelSOUNDFRATex }, 64, 16 },
     { { gFileSelZTargetingENGTex, gFileSelZTargetingGERTex, gFileSelZTargetingFRATex }, 64, 16 },
     { { gFileSelCheckBrightnessENGTex, gFileSelCheckBrightnessGERTex, gFileSelCheckBrightnessFRATex }, 128, 16 },
+    { { gOptionQuicktextENGTex, gOptionQuicktextENGTex, gOptionQuicktextENGTex }, 64, 16 },
     { { gFileSelLanguageENGTex, gFileSelLanguageGERTex, gFileSelLanguageFRATex }, 64, 16 },
 };
-
 static OptionsMenuTextureInfo sOptionsMenuSettings[] = {
     { { gFileSelStereoENGTex, gFileSelStereoENGTex, gFileSelStereoFRATex }, 48, 16 },
     { { gFileSelMonoENGTex, gFileSelMonoENGTex, gFileSelMonoENGTex }, 48, 16 },
@@ -1531,8 +1514,8 @@ static OptionsMenuTextureInfo sOptionsMenuSettings[] = {
     { { gFileSelSurroundENGTex, gFileSelSurroundENGTex, gFileSelSurroundENGTex }, 48, 16 },
     { { gFileSelSwitchENGTex, gFileSelSwitchGERTex, gFileSelSwitchFRATex }, 48, 16 },
     { { gFileSelHoldENGTex, gFileSelHoldGERTex, gFileSelHoldFRATex }, 48, 16 },
-    { { gFileSelSwitchENGTex, gFileSelSwitchGERTex, gFileSelSwitchFRATex }, 48, 16 },
-    { { gFileSelHoldENGTex, gFileSelHoldGERTex, gFileSelHoldFRATex }, 48, 16 },
+    { { gOptionOffENGTex, gOptionOffENGTex, gOptionOffENGTex}, 32, 16 },
+    { { gOptionOnENGTex, gOptionOnENGTex, gOptionOnENGTex}, 24, 16 },
 };

 #else
@@ -1827,6 +1810,30 @@ void FileSelect_DrawOptionsImpl(GameState* thisx) {
         gSP1Quadrangle(POLY_OPA_DISP++, vtx, vtx + 2, vtx + 3, vtx + 1, 0);
     }

+    for (i = 6; i < 8; i++, vtx += 4) {
+        int j = i - 6;
+        gDPPipeSync(POLY_OPA_DISP++);
+        if (j == gSaveContext.quicktextSetting) {
+            if (sSelectedSetting == FS_SETTING_QUICKTEXT) {
+                gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, cursorPrimRed, cursorPrimGreen, cursorPrimBlue,
+                                this->titleAlpha[0]);
+                gDPSetEnvColor(POLY_OPA_DISP++, cursorEnvRed, cursorEnvGreen, cursorEnvBlue, 255);
+            } else {
+                gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 255, 255, 255, this->titleAlpha[0]);
+                gDPSetEnvColor(POLY_OPA_DISP++, 0, 0, 0, 255);
+            }
+        } else {
+            gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 120, 120, 120, this->titleAlpha[0]);
+            gDPSetEnvColor(POLY_OPA_DISP++, 0, 0, 0, 255);
+        }
+
+        gDPLoadTextureBlock(POLY_OPA_DISP++, sOptionsMenuSettings[i].texture[gSaveContext.language], G_IM_FMT_IA,
+                            G_IM_SIZ_8b, OPTIONS_MENU_TEXTURE_WIDTH(sOptionsMenuSettings[i]),
+                            OPTIONS_MENU_TEXTURE_HEIGHT(sOptionsMenuSettings[i]), 0, G_TX_NOMIRROR | G_TX_WRAP,
+                            G_TX_NOMIRROR | G_TX_WRAP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD);
+        gSP1Quadrangle(POLY_OPA_DISP++, vtx, vtx + 2, vtx + 3, vtx + 1, 0);
+    }
+
     gSPVertex(POLY_OPA_DISP++, gOptionsMenuBrightnessVtx, 8, 0);
     vtx = 0;
 #endif
@@ -1850,33 +1857,6 @@ void FileSelect_DrawOptionsImpl(GameState* thisx) {

     vtx += 4;

-#if OOT_PAL_N64
-    gSPVertex(POLY_OPA_DISP++, gOptionsMenuLanguageVtx, 12, 0);
-
-    for (i = 0, vtx = 0; i != LANGUAGE_MAX; i++, vtx += 4) {
-        gDPPipeSync(POLY_OPA_DISP++);
-
-        if (i == gSaveContext.language) {
-            if (sSelectedSetting == FS_SETTING_LANGUAGE) {
-                gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, cursorPrimRed, cursorPrimGreen, cursorPrimBlue,
-                                this->titleAlpha[0]);
-                gDPSetEnvColor(POLY_OPA_DISP++, cursorEnvRed, cursorEnvGreen, cursorEnvBlue, 0xFF);
-            } else {
-                gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 255, 255, 255, this->titleAlpha[0]);
-                gDPSetEnvColor(POLY_OPA_DISP++, 0, 0, 0, 255);
-            }
-        } else {
-            gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 120, 120, 120, this->titleAlpha[0]);
-            gDPSetEnvColor(POLY_OPA_DISP++, 0, 0, 0, 255);
-        }
-
-        gDPLoadTextureBlock(POLY_OPA_DISP++, sLanguageChoices[i].texture, G_IM_FMT_IA, G_IM_SIZ_8b,
-                            sLanguageChoices[i].width, sLanguageChoices[i].height, 0, G_TX_NOMIRROR | G_TX_WRAP,
-                            G_TX_NOMIRROR | G_TX_WRAP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD);
-        gSP1Quadrangle(POLY_OPA_DISP++, vtx, vtx + 2, vtx + 3, vtx + 1, 0);
-    }
-#endif
-
     // blue divider lines
     gDPPipeSync(POLY_OPA_DISP++);
     gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 0, 255, 255, this->titleAlpha[0]);
@@ -1908,14 +1888,12 @@ void FileSelect_DrawOptionsImpl(GameState* thisx) {
     gSP1Quadrangle(POLY_OPA_DISP++, 0, 2, 3, 1, 0);
     Matrix_Pop();

-#if OOT_PAL_N64
     Matrix_Push();
     Matrix_Translate(0.0f, 0.8f, 0.0f, MTXMODE_APPLY);
     MATRIX_FINALIZE_AND_LOAD(POLY_OPA_DISP++, this->state.gfxCtx, "../z_file_nameset_PAL.c", UNK_LINE);
     gSPVertex(POLY_OPA_DISP++, gOptionsDividerLanguageVtx, 4, 0);
     gSP1Quadrangle(POLY_OPA_DISP++, 0, 2, 3, 1, 0);
     Matrix_Pop();
-#endif

     CLOSE_DISPS(this->state.gfxCtx, "../z_file_nameset_PAL.c", 1040);
 }