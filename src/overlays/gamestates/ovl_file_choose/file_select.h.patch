diff --git a/src/overlays/gamestates/ovl_file_choose/file_select.h b/src/overlays/gamestates/ovl_file_choose/file_select.h
index ae41c4dce..96f837a93 100644
--- a/src/overlays/gamestates/ovl_file_choose/file_select.h
+++ b/src/overlays/gamestates/ovl_file_choose/file_select.h
@@ -68,7 +68,11 @@ typedef enum ConfigMode {
     /* 37 */ CM_OPTIONS_MENU,
     /* 38 */ CM_START_OPTIONS,
     /* 39 */ CM_OPTIONS_TO_MAIN,
-    /* 40 */ CM_UNUSED_DELAY
+    /* 40 */ CM_MAIN_TO_RANDOMIZER,
+    /* 41 */ CM_RANDOMIZER_MENU,
+    /* 42 */ CM_START_RANDOMIZER_OPTIONS,
+    /* 43 */ CM_RANDOMIZER_TO_MAIN,
+    /* 44 */ CM_UNUSED_DELAY
 } ConfigMode;

 typedef enum SelectMode {
@@ -78,8 +82,10 @@ typedef enum SelectMode {
     /* 3 */ SM_CONFIRM_FILE,
     /* 4 */ SM_FADE_OUT_FILE_INFO,
     /* 5 */ SM_MOVE_FILE_TO_SLOT,
-    /* 6 */ SM_FADE_OUT,
-    /* 7 */ SM_LOAD_GAME
+    /* 6 */ SM_LOAD_SAVE,
+    /* 7 */ SM_SET_RANDO_SETTINGS,
+    /* 8 */ SM_FADE_OUT,
+    /* 9 */ SM_LOAD_GAME
 } SelectMode;

 typedef enum TitleLabel {
@@ -106,7 +112,6 @@ typedef enum WarningLabel {
 typedef enum MainMenuButtonIndex {
     /* 0 */ FS_BTN_MAIN_FILE_1,
     /* 1 */ FS_BTN_MAIN_FILE_2,
-    /* 2 */ FS_BTN_MAIN_FILE_3,
     /* 3 */ FS_BTN_MAIN_COPY,
     /* 4 */ FS_BTN_MAIN_ERASE,
     /* 5 */ FS_BTN_MAIN_OPTIONS
@@ -115,21 +120,18 @@ typedef enum MainMenuButtonIndex {
 typedef enum CopyMenuButtonIndex {
     /* 0 */ FS_BTN_COPY_FILE_1,
     /* 1 */ FS_BTN_COPY_FILE_2,
-    /* 2 */ FS_BTN_COPY_FILE_3,
     /* 3 */ FS_BTN_COPY_QUIT
 } CopyMenuButtonIndex;

 typedef enum EraseMenuButtonIndex {
     /* 0 */ FS_BTN_ERASE_FILE_1,
     /* 1 */ FS_BTN_ERASE_FILE_2,
-    /* 2 */ FS_BTN_ERASE_FILE_3,
     /* 3 */ FS_BTN_ERASE_QUIT
 } EraseMenuButtonIndex;

 typedef enum SelectMenuButtonIndex {
     /* 0 */ FS_BTN_SELECT_FILE_1,
     /* 1 */ FS_BTN_SELECT_FILE_2,
-    /* 2 */ FS_BTN_SELECT_FILE_3,
     /* 3 */ FS_BTN_SELECT_YES,
     /* 4 */ FS_BTN_SELECT_QUIT
 } SelectMenuButtonIndex;
@@ -149,10 +151,8 @@ typedef enum ActionButtonIndex {
 typedef enum SettingIndex {
     /* 0 */ FS_SETTING_AUDIO,
     /* 1 */ FS_SETTING_TARGET,
-#if OOT_PAL_N64
-    /* 2 */ FS_SETTING_LANGUAGE,
-#endif
-    /*   */ FS_SETTING_MAX
+    FS_SETTING_QUICKTEXT,
+    /* 2  */ FS_SETTING_MAX
 } SettingIndex;

 typedef enum CharPage {
@@ -211,7 +211,6 @@ void FileSelect_StartNameEntry(GameState* thisx);
 void FileSelect_UpdateOptionsMenu(GameState* thisx);
 void FileSelect_StartOptions(GameState* thisx);

-void FileSelect_InitModeDraw(GameState* thisx);
 void FileSelect_ConfigModeDraw(GameState* thisx);
 void FileSelect_SelectModeDraw(GameState* thisx);

@@ -221,8 +220,16 @@ void FileSelect_DrawOptions(GameState* thisx);
 void FileSelect_DrawNameEntry(GameState* thisx);
 void FileSelect_DrawCharacter(GraphicsContext* gfxCtx, void* texture, s16 vtx);

+void FileSelect_LoadSave(GameState* thisx);
+void FileSelect_RotateToRandomizerSettings(GameState* thisx);
+void FileSelect_StartRandomizerOptions(GameState* thisx);
+void FileSelect_UpdateRandomizerOptionsMenu(GameState* thisx);
+void FileSelect_RotateToMainFromRandomizer(GameState* thisx);
+void FileSelect_DrawRandomizerMenu(GameState* thisx);
+void FileSelect_DrawRandomizerSettings(GameState* thisx);
+
 #if OOT_VERSION == PAL_1_1
-extern s16 D_808124C0[];
+extern s16 fileNameCharWidth[];
 #endif

 #endif