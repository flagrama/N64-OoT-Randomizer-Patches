diff --git a/src/overlays/gamestates/ovl_file_choose/z_file_choose.c b/src/overlays/gamestates/ovl_file_choose/z_file_choose.c
index e8934c373..f6ddbf26f 100644
--- a/src/overlays/gamestates/ovl_file_choose/z_file_choose.c
+++ b/src/overlays/gamestates/ovl_file_choose/z_file_choose.c
@@ -14,6 +14,7 @@
 #include "n64dd.h"
 #endif
 #include "printf.h"
+#include "randomizer_state.h"
 #include "regs.h"
 #include "rumble.h"
 #include "segment_symbols.h"
@@ -33,53 +34,9 @@
 #include "z64ss_sram.h"
 #include "z64view.h"

-#if OOT_PAL_N64
-#include "assets/objects/object_mag/object_mag.h"
-#endif
 #include "assets/textures/title_static/title_static.h"
 #include "assets/textures/parameter_static/parameter_static.h"

-#if OOT_PAL_N64
-static s32 sInitialLanguageAlphaAsInt = 100;
-static f32 sInitialLanguageAlphaStep = 8.0f;
-static f32 sInitialLanguageAlpha = 100.0f;
-
-static s16 sInitialLanguageStickAdjX;
-static s16 sInitialLanguageStickXDir;
-static s16 sInitialLanguageInputTimerX;
-
-typedef struct InitialLanguageTextureInfo {
-    /* 0x00 */ void* texture;
-    /* 0x04 */ u16 width;
-    /* 0x06 */ u16 height;
-    /* 0x08 */ u32 x1;
-    /* 0x0C */ u32 y1;
-    /* 0x10 */ u32 x2;
-    /* 0x14 */ u32 y2;
-} InitialLanguageTextureInfo; // size = 0x18
-
-static InitialLanguageTextureInfo sInitialLanguageTextures[] = {
-    { gFileSelInitialLanguageChoiceENGTex, 80, 32, 40, 70, 120, 102 },
-    { gFileSelInitialLanguageChoiceGERTex, 80, 32, 120, 70, 200, 102 },
-    { gFileSelInitialLanguageChoiceFRATex, 80, 32, 200, 70, 280, 102 },
-};
-
-typedef struct InitialLanguageCursorInfo {
-    /* 0x00 */ u32 x1;
-    /* 0x04 */ u32 y1;
-    /* 0x08 */ u32 x2;
-    /* 0x0C */ u32 y2;
-} InitialLanguageCursorInfo; // size = 0x10
-
-static InitialLanguageCursorInfo sInitialLanguageCursors[] = {
-    { 48, 52, 120, 124 },
-    { 128, 52, 200, 124 },
-    { 208, 52, 280, 124 },
-};
-#endif
-
-static s16 sUnused = 106;
-
 static s16 sScreenFillAlpha = 255;

 static Gfx sScreenFillSetupDL[] = {
@@ -100,233 +57,6 @@ static s16 sWindowContentColors[2][3] = {
     { 100, 100, 100 }, // gray
 };

-#if OOT_PAL_N64
-void FileSelect_UpdateInitialLanguageMenu(FileSelectState* this) {
-    SramContext* sramCtx = &this->sramCtx;
-    Input* input = &this->state.input[0];
-
-    if (gSaveContext.language >= LANGUAGE_MAX) {
-        gSaveContext.language = 0;
-    }
-
-    sInitialLanguageAlpha += sInitialLanguageAlphaStep;
-    if (sInitialLanguageAlphaStep < 0.0f) {
-        if (sInitialLanguageAlpha < 100.0f) {
-            sInitialLanguageAlpha = 100.0f;
-            sInitialLanguageAlphaStep *= -1.0f;
-        }
-    } else if (sInitialLanguageAlphaStep > 0.0f) {
-        if (sInitialLanguageAlpha > 255.0f) {
-            sInitialLanguageAlpha = 255.0f;
-            sInitialLanguageAlphaStep *= -1.0f;
-        }
-    }
-
-    sInitialLanguageAlphaAsInt = (s32)sInitialLanguageAlpha;
-    sInitialLanguageStickAdjX = (s16)input->rel.stick_x;
-    if (sInitialLanguageStickAdjX < -30) {
-        if (sInitialLanguageStickXDir == -1) {
-            sInitialLanguageInputTimerX -= 1;
-            if (sInitialLanguageInputTimerX < 0) {
-                sInitialLanguageInputTimerX = 2;
-            } else {
-                sInitialLanguageStickAdjX = 0;
-            }
-        } else {
-            sInitialLanguageInputTimerX = 10;
-            sInitialLanguageStickXDir = -1;
-        }
-    } else if (sInitialLanguageStickAdjX > 30) {
-        if (sInitialLanguageStickXDir == 1) {
-            sInitialLanguageInputTimerX -= 1;
-            if (sInitialLanguageInputTimerX < 0) {
-                sInitialLanguageInputTimerX = 2;
-            } else {
-                sInitialLanguageStickAdjX = 0;
-            }
-        } else {
-            sInitialLanguageInputTimerX = 10;
-            sInitialLanguageStickXDir = 1;
-        }
-    } else {
-        sInitialLanguageStickXDir = 0;
-    }
-
-    if (CHECK_BTN_ALL(input->press.button, BTN_A) || CHECK_BTN_ALL(input->press.button, BTN_B) ||
-        CHECK_BTN_ALL(input->press.button, BTN_START)) {
-        Audio_PlaySfxGeneral(NA_SE_SY_FSEL_DECIDE_L, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
-                             &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
-        Audio_PlaySfxGeneral(NA_SE_SY_FSEL_DECIDE_L, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
-                             &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
-        sramCtx->readBuff[2] = gSaveContext.language;
-        Sram_WriteSramHeader(sramCtx);
-        this->configMode++;
-        return;
-    }
-
-    if (sInitialLanguageStickAdjX < -30) {
-        Audio_PlaySfxGeneral(NA_SE_SY_FSEL_CURSOR, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
-                             &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
-        gSaveContext.language--;
-        if (gSaveContext.language >= LANGUAGE_MAX) {
-            gSaveContext.language = LANGUAGE_MAX - 1;
-        }
-    } else if (sInitialLanguageStickAdjX > 30) {
-        Audio_PlaySfxGeneral(NA_SE_SY_FSEL_CURSOR, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
-                             &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
-        gSaveContext.language++;
-        if (gSaveContext.language >= LANGUAGE_MAX) {
-            gSaveContext.language = 0;
-        }
-    }
-}
-
-void FileSelect_DrawImageRGBA32(GraphicsContext* gfxCtx, s16 centerX, s16 centerY, u8* source, u32 width, u32 height) {
-    u8* curTexture;
-    s32 textureCount;
-    s32 rectLeft;
-    s32 rectTop;
-    u32 textureHeight;
-    s32 remainingSize;
-    s32 textureSize;
-    s32 pad;
-    s32 i;
-
-    OPEN_DISPS(gfxCtx, "../z_file_choose.c", UNK_LINE);
-
-    Gfx_SetupDL_56Opa(gfxCtx);
-
-    curTexture = source;
-    rectLeft = centerX - (width / 2);
-    rectTop = centerY - (height / 2);
-    remainingSize = (width * height) << 2;
-    textureHeight = 4096 / (width << 2);
-    textureSize = (width * textureHeight) << 2;
-    textureCount = remainingSize / textureSize;
-    if ((remainingSize % textureSize) != 0) {
-        textureCount++;
-    }
-
-    gDPSetTileCustom(POLY_OPA_DISP++, G_IM_FMT_RGBA, G_IM_SIZ_32b, 0, 0, width - 1, textureHeight - 1, 0,
-                     G_TX_NOMIRROR | G_TX_CLAMP, G_TX_NOMIRROR | G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD,
-                     G_TX_NOLOD);
-
-    remainingSize -= textureSize;
-
-    for (i = 0; i < textureCount; i++) {
-        gDPSetTextureImage(POLY_OPA_DISP++, G_IM_FMT_RGBA, G_IM_SIZ_32b, width, curTexture);
-
-        gDPLoadSync(POLY_OPA_DISP++);
-        gDPLoadTile(POLY_OPA_DISP++, G_TX_LOADTILE, 0, 0, (width - 1) << 2, (textureHeight - 1) << 2);
-
-        gSPTextureRectangle(POLY_OPA_DISP++, rectLeft << 2, rectTop << 2, (rectLeft + (s32)width) << 2,
-                            (rectTop + textureHeight) << 2, G_TX_RENDERTILE, 0, 0, 1 << 10, 1 << 10);
-
-        curTexture += textureSize;
-        rectTop += textureHeight;
-
-        if ((remainingSize - textureSize) < 0) {
-            if (remainingSize > 0) {
-                textureHeight = remainingSize / (s32)(width << 2);
-                remainingSize -= textureSize;
-
-                gDPSetTileCustom(POLY_OPA_DISP++, G_IM_FMT_RGBA, G_IM_SIZ_32b, 0, 0, width - 1, textureHeight - 1, 0,
-                                 G_TX_NOMIRROR | G_TX_CLAMP, G_TX_NOMIRROR | G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK,
-                                 G_TX_NOLOD, G_TX_NOLOD);
-            }
-        } else {
-            remainingSize -= textureSize;
-        }
-    }
-
-    CLOSE_DISPS(gfxCtx, "../z_file_choose.c", UNK_LINE);
-}
-
-void FileSelect_DrawInitialLanguageMenu(FileSelectState* this) {
-    u8* source;
-    s32 i;
-    s32 y1;
-    s32 y2;
-
-    OPEN_DISPS(this->state.gfxCtx, "../z_file_choose.c", UNK_LINE);
-
-    gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 255, 255, 255, 70 + WREG(0));
-    FileSelect_DrawImageRGBA32(this->state.gfxCtx, 160, 85 + WREG(1), (u8*)gTitleZeldaShieldLogoTex, 160, 160);
-
-    Gfx_SetupDL_39Opa(this->state.gfxCtx);
-
-    gDPSetAlphaCompare(POLY_OPA_DISP++, G_AC_NONE);
-    gDPSetCombineMode(POLY_OPA_DISP++, G_CC_MODULATEIA_PRIM, G_CC_MODULATEIA_PRIM);
-    gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 255, 255, 255, 255);
-
-    gDPLoadTextureBlock(POLY_OPA_DISP++, gTitleCopyright1998Tex, G_IM_FMT_IA, G_IM_SIZ_8b, 128, 16, 0,
-                        G_TX_NOMIRROR | G_TX_CLAMP, G_TX_NOMIRROR | G_TX_CLAMP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD,
-                        G_TX_NOLOD);
-
-    gSPTextureRectangle(POLY_OPA_DISP++, 94 << 2, 198 << 2, 222 << 2, 214 << 2, G_TX_RENDERTILE, 0, 0, 1 << 10,
-                        1 << 10);
-
-    Gfx_SetupDL_39Opa(this->state.gfxCtx);
-
-    gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 100, 100, 255, sInitialLanguageAlphaAsInt);
-
-    gDPLoadTextureBlock_4b(POLY_OPA_DISP++, gFileSelInitialLanguageCursorTex, G_IM_FMT_I, 48, 48, 0,
-                           G_TX_NOMIRROR | G_TX_WRAP, G_TX_NOMIRROR | G_TX_WRAP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD,
-                           G_TX_NOLOD);
-
-    gSPTextureRectangle(POLY_OPA_DISP++, (sInitialLanguageCursors[gSaveContext.language].x1 + GREG(1)) << 2,
-                        (sInitialLanguageCursors[gSaveContext.language].y1 + GREG(2)) << 2,
-                        (sInitialLanguageCursors[gSaveContext.language].x2 + GREG(1)) << 2,
-                        (sInitialLanguageCursors[gSaveContext.language].y2 + GREG(2)) << 2, G_TX_RENDERTILE, 0, 0,
-                        3 << 8, 3 << 8);
-
-    gDPPipeSync(POLY_OPA_DISP++);
-    gDPSetRenderMode(POLY_OPA_DISP++, G_RM_XLU_SURF, G_RM_XLU_SURF2);
-    gDPSetCombineMode(POLY_OPA_DISP++, G_CC_BLENDPEDECALA, G_CC_BLENDPEDECALA);
-    gDPSetEnvColor(POLY_OPA_DISP++, 0, 0, 50, 255);
-
-    for (i = 0; i < LANGUAGE_MAX; i++) {
-        gDPPipeSync(POLY_OPA_DISP++);
-
-        if (i == gSaveContext.language) {
-            gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 255, 255, 255, 255);
-        } else {
-            gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 50, 50, 100, 255);
-        }
-
-        gDPLoadTextureBlock(POLY_OPA_DISP++, sInitialLanguageTextures[i].texture, G_IM_FMT_IA, G_IM_SIZ_8b,
-                            sInitialLanguageTextures[i].width, sInitialLanguageTextures[i].height, 0,
-                            G_TX_NOMIRROR | G_TX_WRAP, G_TX_NOMIRROR | G_TX_WRAP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD,
-                            G_TX_NOLOD);
-
-        gSPTextureRectangle(POLY_OPA_DISP++, (sInitialLanguageTextures[i].x1 + GREG(1)) << 2,
-                            (sInitialLanguageTextures[i].y1 + GREG(2)) << 2,
-                            (sInitialLanguageTextures[i].x2 + GREG(1)) << 2,
-                            (sInitialLanguageTextures[i].y2 + GREG(2)) << 2, G_TX_RENDERTILE, 0, 0, 1 << 10, 1 << 10);
-    }
-
-    gDPPipeSync(POLY_OPA_DISP++);
-
-    gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, 220, 180, 30, 255);
-    gDPSetEnvColor(POLY_OPA_DISP++, 60, 20, 0, 255);
-
-    source = (u8*)gFileSelSelectYourLanguageTex;
-    y1 = 120 + GREG(3);
-    for (i = 0; i < 8; i++, source += 0x500) {
-        y2 = y1 + 8;
-        gDPLoadTextureBlock(POLY_OPA_DISP++, source, G_IM_FMT_IA, G_IM_SIZ_8b, 160, 8, 0, G_TX_NOMIRROR | G_TX_WRAP,
-                            G_TX_NOMIRROR | G_TX_WRAP, G_TX_NOMASK, G_TX_NOMASK, G_TX_NOLOD, G_TX_NOLOD);
-
-        gSPTextureRectangle(POLY_OPA_DISP++, (80 + GREG(4)) << 2, y1 << 2, (240 + GREG(4)) << 2, y2 << 2,
-                            G_TX_RENDERTILE, 0, 0, 1 << 10, 1 << 10);
-
-        y1 = y2;
-    }
-
-    CLOSE_DISPS(this->state.gfxCtx, "../z_file_choose.c", UNK_LINE);
-}
-#endif
-
 void FileSelect_SetView(FileSelectState* this, f32 eyeX, f32 eyeY, f32 eyeZ) {
     Vec3f eye;
     Vec3f lookAt;
@@ -371,7 +101,7 @@ void FileSelect_InitModeUpdate(GameState* thisx) {
     if (this->configMode == CM_FADE_IN_START) {
         Sram_VerifyAndLoadAllSaves(this, sramCtx);

-        if (!SLOT_OCCUPIED(sramCtx, 0) && !SLOT_OCCUPIED(sramCtx, 1) && !SLOT_OCCUPIED(sramCtx, 2)) {
+        if (!SLOT_OCCUPIED(sramCtx, 0) && !SLOT_OCCUPIED(sramCtx, 1)) {
             this->configMode++; // = CM_FADE_IN_END
         } else {
             this->menuMode = FS_MENU_MODE_CONFIG;
@@ -386,8 +116,6 @@ void FileSelect_InitModeUpdate(GameState* thisx) {
             sScreenFillAlpha = 0;
             this->configMode++; // = CM_MAIN_MENU
         }
-    } else if (this->configMode == CM_MAIN_MENU) {
-        FileSelect_UpdateInitialLanguageMenu(this);
     } else {
         sScreenFillAlpha += 40;
         if (sScreenFillAlpha >= 255) {
@@ -401,12 +129,6 @@ void FileSelect_InitModeUpdate(GameState* thisx) {
 }

 void FileSelect_InitModeDraw(GameState* thisx) {
-#if OOT_PAL_N64
-    FileSelectState* this = (FileSelectState*)thisx;
-
-    Gfx_SetupDL_39Opa(this->state.gfxCtx);
-    FileSelect_DrawInitialLanguageMenu(this);
-#endif
 }

 /**
@@ -422,7 +144,7 @@ void FileSelect_FadeInMenuElements(GameState* thisx) {
     this->titleAlpha[0] += VREG(1);
     this->windowAlpha += VREG(2);

-    for (i = 0; i < 3; i++) {
+    for (i = 0; i < 2; i++) {
         this->fileButtonAlpha[i] = this->windowAlpha;

         if (SLOT_OCCUPIED(sramCtx, i)) {
@@ -519,7 +241,7 @@ void FileSelect_UpdateMainMenu(GameState* thisx) {
     Input* input = &this->state.input[0];

     if (CHECK_BTN_ALL(input->press.button, BTN_START) || CHECK_BTN_ALL(input->press.button, BTN_A)) {
-        if (this->buttonIndex <= FS_BTN_MAIN_FILE_3) {
+        if (this->buttonIndex <= FS_BTN_MAIN_FILE_2) {
             PRINTF("REGCK_ALL[%x]=%x,%x,%x,%x,%x,%x\n", this->buttonIndex, GET_NEWF(sramCtx, this->buttonIndex, 0),
                    GET_NEWF(sramCtx, this->buttonIndex, 1), GET_NEWF(sramCtx, this->buttonIndex, 2),
                    GET_NEWF(sramCtx, this->buttonIndex, 3), GET_NEWF(sramCtx, this->buttonIndex, 4),
@@ -615,11 +337,11 @@ void FileSelect_UpdateMainMenu(GameState* thisx) {
         }

         if (this->buttonIndex == FS_BTN_MAIN_COPY) {
-            if (!SLOT_OCCUPIED(sramCtx, 0) && !SLOT_OCCUPIED(sramCtx, 1) && !SLOT_OCCUPIED(sramCtx, 2)) {
+            if (!SLOT_OCCUPIED(sramCtx, 0) && !SLOT_OCCUPIED(sramCtx, 1)) {
                 this->warningButtonIndex = this->buttonIndex;
                 this->warningLabel = FS_WARNING_NO_FILE_COPY;
                 this->emptyFileTextAlpha = 255;
-            } else if (SLOT_OCCUPIED(sramCtx, 0) && SLOT_OCCUPIED(sramCtx, 1) && SLOT_OCCUPIED(sramCtx, 2)) {
+            } else if (SLOT_OCCUPIED(sramCtx, 0) && SLOT_OCCUPIED(sramCtx, 1)) {
                 this->warningButtonIndex = this->buttonIndex;
                 this->warningLabel = FS_WARNING_NO_EMPTY_FILES;
                 this->emptyFileTextAlpha = 255;
@@ -627,7 +349,7 @@ void FileSelect_UpdateMainMenu(GameState* thisx) {
                 this->warningLabel = FS_WARNING_NONE;
             }
         } else if (this->buttonIndex == FS_BTN_MAIN_ERASE) {
-            if (!SLOT_OCCUPIED(sramCtx, 0) && !SLOT_OCCUPIED(sramCtx, 1) && !SLOT_OCCUPIED(sramCtx, 2)) {
+            if (!SLOT_OCCUPIED(sramCtx, 0) && !SLOT_OCCUPIED(sramCtx, 1)) {
                 this->warningButtonIndex = this->buttonIndex;
                 this->warningLabel = FS_WARNING_NO_FILE_ERASE;
                 this->emptyFileTextAlpha = 255;
@@ -709,26 +431,28 @@ void FileSelect_RotateToMain(GameState* thisx) {
 }

 static void (*sConfigModeUpdateFuncs[])(GameState*) = {
-    FileSelect_StartFadeIn,        FileSelect_FinishFadeIn,
-    FileSelect_UpdateMainMenu,     FileSelect_SetupCopySource,
-    FileSelect_SelectCopySource,   FileSelect_SetupCopyDest1,
-    FileSelect_SetupCopyDest2,     FileSelect_SelectCopyDest,
-    FileSelect_ExitToCopySource1,  FileSelect_ExitToCopySource2,
-    FileSelect_SetupCopyConfirm1,  FileSelect_SetupCopyConfirm2,
-    FileSelect_CopyConfirm,        FileSelect_ReturnToCopyDest,
-    FileSelect_CopyAnim1,          FileSelect_CopyAnim2,
-    FileSelect_CopyAnim3,          FileSelect_CopyAnim4,
-    FileSelect_CopyAnim5,          FileSelect_ExitCopyToMain,
-    FileSelect_SetupEraseSelect,   FileSelect_EraseSelect,
-    FileSelect_SetupEraseConfirm1, FileSelect_SetupEraseConfirm2,
-    FileSelect_EraseConfirm,       FileSelect_ExitToEraseSelect1,
-    FileSelect_ExitToEraseSelect2, FileSelect_EraseAnim1,
-    FileSelect_EraseAnim2,         FileSelect_EraseAnim3,
-    FileSelect_ExitEraseToMain,    FileSelect_UnusedCM31,
-    FileSelect_RotateToNameEntry,  FileSelect_UpdateKeyboardCursor,
-    FileSelect_StartNameEntry,     FileSelect_RotateToMain,
-    FileSelect_RotateToOptions,    FileSelect_UpdateOptionsMenu,
-    FileSelect_StartOptions,       FileSelect_RotateToMain,
+    FileSelect_StartFadeIn,                 FileSelect_FinishFadeIn,
+    FileSelect_UpdateMainMenu,              FileSelect_SetupCopySource,
+    FileSelect_SelectCopySource,            FileSelect_SetupCopyDest1,
+    FileSelect_SetupCopyDest2,              FileSelect_SelectCopyDest,
+    FileSelect_ExitToCopySource1,           FileSelect_ExitToCopySource2,
+    FileSelect_SetupCopyConfirm1,           FileSelect_SetupCopyConfirm2,
+    FileSelect_CopyConfirm,                 FileSelect_ReturnToCopyDest,
+    FileSelect_CopyAnim1,                   FileSelect_CopyAnim2,
+    FileSelect_CopyAnim3,                   FileSelect_CopyAnim4,
+    FileSelect_CopyAnim5,                   FileSelect_ExitCopyToMain,
+    FileSelect_SetupEraseSelect,            FileSelect_EraseSelect,
+    FileSelect_SetupEraseConfirm1,          FileSelect_SetupEraseConfirm2,
+    FileSelect_EraseConfirm,                FileSelect_ExitToEraseSelect1,
+    FileSelect_ExitToEraseSelect2,          FileSelect_EraseAnim1,
+    FileSelect_EraseAnim2,                  FileSelect_EraseAnim3,
+    FileSelect_ExitEraseToMain,             FileSelect_UnusedCM31,
+    FileSelect_RotateToNameEntry,           FileSelect_UpdateKeyboardCursor,
+    FileSelect_StartNameEntry,              FileSelect_RotateToMain,
+    FileSelect_RotateToOptions,             FileSelect_UpdateOptionsMenu,
+    FileSelect_StartOptions,                FileSelect_RotateToMain,
+    FileSelect_RotateToRandomizerSettings,  FileSelect_UpdateRandomizerOptionsMenu,
+    FileSelect_StartRandomizerOptions,      FileSelect_RotateToMainFromRandomizer,
     FileSelect_UnusedCMDelay,
 };

@@ -857,303 +581,323 @@ void FileSelect_SetWindowVtx(GameState* thisx) {
     }
 }

-static s16 D_80812818[] = { 0x001A, 0x000A, 0x000A, 0x000A };
-static s16 D_80812820[] = { 0x0020, 0x000C, 0x000C, 0x000C };
-static s16 D_80812828[] = { 0x0010, 0x000C, 0x000C, 0x000C };
-static s16 D_80812830[] = { 0x0040, 0x0054, 0x0068, 0x0274, 0x0278, 0x027C };
-static s16 D_8081283C[] = { 0x0040, 0x0054, 0x0068, 0x0278 };
-static s16 D_80812844[] = { 0x0274, 0x0278 };
-static s16 D_80812848[] = { 0x0274, 0x0278 };
+static s16 sDeathCounterXOffsets[] = { 0x001A, 0x000A, 0x000A, 0x000A };
+static s16 sDeathCounterTextureWidths[] = { 0x0020, 0x000C, 0x000C, 0x000C };  // index 0 doesn't seem to affect anything
+static s16 sDeathCounterTextureHeights[] = { 0x0010, 0x000C, 0x000C, 0x000C };  // index 0 doesn't seem to affect anything
+static s16 sSelectMenuButtonYOffsets[] = { 0x002C, 0x0040, 0x01A4, 0x01A8, 0x01AC };
+static s16 sCopyEraseSelectButtonYOffsets[] = { 0x0054, 0x0040, 0x01AC };
+static s16 sCopyEraseConfirmButtonYOffsets[] = { 0x01A4, 0x01AC };
+static s16 sFileSelectConfirmButtonYOffsets[] = { 0x01A4, 0x01AC };

 void FileSelect_SetWindowContentVtx(GameState* thisx) {
     FileSelectState* this = (FileSelectState*)thisx;
     SramContext* sramCtx = &this->sramCtx;
-    s16 phi_t2;
-    s16 phi_t0;
-    s16 phi_t5;
-    s16 phi_a1;
-    s16 phi_ra;
-    s16 temp_t1;
+    s16 currentVtx;
+    s16 currentPosX;
+    s16 buttonIndex;
+    s16 i;
+    s16 currentPosY;
+    s16 yOffset;
 #if OOT_PAL_N64
     u8 fileNameChar;
 #endif

-    this->windowContentVtx = GRAPH_ALLOC(this->state.gfxCtx, 0x288 * sizeof(Vtx));
+    this->windowContentVtx = GRAPH_ALLOC(this->state.gfxCtx, 0x1B8 * sizeof(Vtx));

-    for (phi_t2 = 0; phi_t2 < 0x288; phi_t2 += 4) {
-        this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = 0x12C;
-        this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-            this->windowContentVtx[phi_t2].v.ob[0] + 0x10;
+    for (currentVtx = 0; currentVtx < 0x1B8; currentVtx += 4) {
+        this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = 0x12C;
+        this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+            this->windowContentVtx[currentVtx].v.ob[0] + 0x10;

-        this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] = 0;
-        this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-            this->windowContentVtx[phi_t2].v.ob[1] - 0x10;
+        this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] = 0;
+        this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+            this->windowContentVtx[currentVtx].v.ob[1] - 0x10;

-        this->windowContentVtx[phi_t2].v.ob[2] = this->windowContentVtx[phi_t2 + 1].v.ob[2] =
-            this->windowContentVtx[phi_t2 + 2].v.ob[2] = this->windowContentVtx[phi_t2 + 3].v.ob[2] = 0;
+        this->windowContentVtx[currentVtx].v.ob[2] = this->windowContentVtx[currentVtx + 1].v.ob[2] =
+            this->windowContentVtx[currentVtx + 2].v.ob[2] = this->windowContentVtx[currentVtx + 3].v.ob[2] = 0;

-        this->windowContentVtx[phi_t2].v.flag = this->windowContentVtx[phi_t2 + 1].v.flag =
-            this->windowContentVtx[phi_t2 + 2].v.flag = this->windowContentVtx[phi_t2 + 3].v.flag = 0;
+        this->windowContentVtx[currentVtx].v.flag = this->windowContentVtx[currentVtx + 1].v.flag =
+            this->windowContentVtx[currentVtx + 2].v.flag = this->windowContentVtx[currentVtx + 3].v.flag = 0;

-        this->windowContentVtx[phi_t2].v.tc[0] = this->windowContentVtx[phi_t2].v.tc[1] =
-            this->windowContentVtx[phi_t2 + 1].v.tc[1] = this->windowContentVtx[phi_t2 + 2].v.tc[0] = 0;
+        this->windowContentVtx[currentVtx].v.tc[0] = this->windowContentVtx[currentVtx].v.tc[1] =
+            this->windowContentVtx[currentVtx + 1].v.tc[1] = this->windowContentVtx[currentVtx + 2].v.tc[0] = 0;

-        this->windowContentVtx[phi_t2 + 1].v.tc[0] = this->windowContentVtx[phi_t2 + 2].v.tc[1] =
-            this->windowContentVtx[phi_t2 + 3].v.tc[0] = this->windowContentVtx[phi_t2 + 3].v.tc[1] = 0x200;
+        this->windowContentVtx[currentVtx + 1].v.tc[0] = this->windowContentVtx[currentVtx + 2].v.tc[1] =
+            this->windowContentVtx[currentVtx + 3].v.tc[0] = this->windowContentVtx[currentVtx + 3].v.tc[1] = 0x200;

-        this->windowContentVtx[phi_t2].v.cn[0] = this->windowContentVtx[phi_t2 + 1].v.cn[0] =
-            this->windowContentVtx[phi_t2 + 2].v.cn[0] = this->windowContentVtx[phi_t2 + 3].v.cn[0] =
-                this->windowContentVtx[phi_t2].v.cn[1] = this->windowContentVtx[phi_t2 + 1].v.cn[1] =
-                    this->windowContentVtx[phi_t2 + 2].v.cn[1] = this->windowContentVtx[phi_t2 + 3].v.cn[1] =
-                        this->windowContentVtx[phi_t2].v.cn[2] = this->windowContentVtx[phi_t2 + 1].v.cn[2] =
-                            this->windowContentVtx[phi_t2 + 2].v.cn[2] = this->windowContentVtx[phi_t2 + 3].v.cn[2] =
-                                this->windowContentVtx[phi_t2].v.cn[3] = this->windowContentVtx[phi_t2 + 1].v.cn[3] =
-                                    this->windowContentVtx[phi_t2 + 2].v.cn[3] =
-                                        this->windowContentVtx[phi_t2 + 3].v.cn[3] = 0xFF;
+        this->windowContentVtx[currentVtx].v.cn[0] = this->windowContentVtx[currentVtx + 1].v.cn[0] =
+            this->windowContentVtx[currentVtx + 2].v.cn[0] = this->windowContentVtx[currentVtx + 3].v.cn[0] =
+                this->windowContentVtx[currentVtx].v.cn[1] = this->windowContentVtx[currentVtx + 1].v.cn[1] =
+                    this->windowContentVtx[currentVtx + 2].v.cn[1] = this->windowContentVtx[currentVtx + 3].v.cn[1] =
+                        this->windowContentVtx[currentVtx].v.cn[2] = this->windowContentVtx[currentVtx + 1].v.cn[2] =
+                            this->windowContentVtx[currentVtx + 2].v.cn[2] = this->windowContentVtx[currentVtx + 3].v.cn[2] =
+                                this->windowContentVtx[currentVtx].v.cn[3] = this->windowContentVtx[currentVtx + 1].v.cn[3] =
+                                    this->windowContentVtx[currentVtx + 2].v.cn[3] =
+                                        this->windowContentVtx[currentVtx + 3].v.cn[3] = 0xFF;
     }

+    // Title label
+    // X (left)
     this->windowContentVtx[0].v.ob[0] = this->windowContentVtx[2].v.ob[0] = this->windowPosX;
+    // X (right)
     this->windowContentVtx[1].v.ob[0] = this->windowContentVtx[3].v.ob[0] = this->windowContentVtx[0].v.ob[0] + 0x80;
+    // Y (top)
     this->windowContentVtx[0].v.ob[1] = this->windowContentVtx[1].v.ob[1] = 0x48;
+    // Y (bottom)
     this->windowContentVtx[2].v.ob[1] = this->windowContentVtx[3].v.ob[1] = this->windowContentVtx[0].v.ob[1] - 0x10;
+    // Texture coordinates
     this->windowContentVtx[1].v.tc[0] = this->windowContentVtx[3].v.tc[0] = 0x1000;

-    for (phi_a1 = 0, phi_t2 = 4; phi_a1 < 3; phi_a1++) {
-        phi_t0 = this->windowPosX - 6;
+    // File info boxes
+    for (i = 0, currentVtx = 4; i < 2; i++) {
+        currentPosX = this->windowPosX - 6;

-        for (phi_t5 = 0; phi_t5 < 5; phi_t5++, phi_t2 += 4) {
-            this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = phi_t0;
-            this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-                this->windowContentVtx[phi_t2].v.ob[0] + sFileInfoBoxPartWidths[phi_t5];
+        for (buttonIndex = 0; buttonIndex < 5; buttonIndex++, currentVtx += 4) {
+            this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = currentPosX;
+            this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+                this->windowContentVtx[currentVtx].v.ob[0] + sFileInfoBoxPartWidths[buttonIndex];

-            this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] =
-                this->fileNamesY[phi_a1] + 0x2C;
+            this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] =
+                this->fileNamesY[i] + 0x2C;

-            this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-                this->windowContentVtx[phi_t2].v.ob[1] - 0x38;
+            this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+                this->windowContentVtx[currentVtx].v.ob[1] - 0x38;

-            this->windowContentVtx[phi_t2 + 1].v.tc[0] = this->windowContentVtx[phi_t2 + 3].v.tc[0] =
-                sFileInfoBoxPartWidths[phi_t5] << 5;
-            this->windowContentVtx[phi_t2 + 2].v.tc[1] = this->windowContentVtx[phi_t2 + 3].v.tc[1] = 0x700;
-            phi_t0 += sFileInfoBoxPartWidths[phi_t5];
+            this->windowContentVtx[currentVtx + 1].v.tc[0] = this->windowContentVtx[currentVtx + 3].v.tc[0] =
+                sFileInfoBoxPartWidths[buttonIndex] << 5;
+            this->windowContentVtx[currentVtx + 2].v.tc[1] = this->windowContentVtx[currentVtx + 3].v.tc[1] = 0x700;
+            currentPosX += sFileInfoBoxPartWidths[buttonIndex];
         }
     }

-    phi_t0 = this->windowPosX - 6;
-    phi_ra = 0x2C;
+    currentPosX = this->windowPosX - 6;
+    currentPosY = 0x2C;

-    for (phi_t5 = 0; phi_t5 < 3; phi_t5++, phi_t2 += 20, phi_ra -= 0x10) {
-        this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = phi_t0;
+    for (buttonIndex = 0; buttonIndex < 2; buttonIndex++, currentVtx += 20, currentPosY -= 0x10) {
+        this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = currentPosX;

-        this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-            this->windowContentVtx[phi_t2].v.ob[0] + 0x40;
+        this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+            this->windowContentVtx[currentVtx].v.ob[0] + 0x40;

-        this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] =
-            this->buttonYOffsets[phi_t5] + phi_ra;
-        this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-            this->windowContentVtx[phi_t2].v.ob[1] - 0x10;
+        this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] =
+            this->buttonYOffsets[buttonIndex] + currentPosY;
+        this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+            this->windowContentVtx[currentVtx].v.ob[1] - 0x10;

-        this->windowContentVtx[phi_t2 + 1].v.tc[0] = this->windowContentVtx[phi_t2 + 3].v.tc[0] = 0x800;
+        this->windowContentVtx[currentVtx + 1].v.tc[0] = this->windowContentVtx[currentVtx + 3].v.tc[0] = 0x800;

-        this->windowContentVtx[phi_t2 + 4].v.ob[0] = this->windowContentVtx[phi_t2 + 6].v.ob[0] = phi_t0 + 0x40;
+        this->windowContentVtx[currentVtx + 4].v.ob[0] = this->windowContentVtx[currentVtx + 6].v.ob[0] = currentPosX + 0x40;

-        this->windowContentVtx[phi_t2 + 5].v.ob[0] = this->windowContentVtx[phi_t2 + 7].v.ob[0] =
-            this->windowContentVtx[phi_t2 + 4].v.ob[0] + 0x6C;
+        this->windowContentVtx[currentVtx + 5].v.ob[0] = this->windowContentVtx[currentVtx + 7].v.ob[0] =
+            this->windowContentVtx[currentVtx + 4].v.ob[0] + 0x6C;

-        this->windowContentVtx[phi_t2 + 4].v.ob[1] = this->windowContentVtx[phi_t2 + 5].v.ob[1] =
-            this->buttonYOffsets[phi_t5] + phi_ra;
+        this->windowContentVtx[currentVtx + 4].v.ob[1] = this->windowContentVtx[currentVtx + 5].v.ob[1] =
+            this->buttonYOffsets[buttonIndex] + currentPosY;

-        this->windowContentVtx[phi_t2 + 6].v.ob[1] = this->windowContentVtx[phi_t2 + 7].v.ob[1] =
-            this->windowContentVtx[phi_t2 + 4].v.ob[1] - 0x10;
+        this->windowContentVtx[currentVtx + 6].v.ob[1] = this->windowContentVtx[currentVtx + 7].v.ob[1] =
+            this->windowContentVtx[currentVtx + 4].v.ob[1] - 0x10;

-        this->windowContentVtx[phi_t2 + 5].v.tc[0] = this->windowContentVtx[phi_t2 + 7].v.tc[0] = 0xD80;
+        this->windowContentVtx[currentVtx + 5].v.tc[0] = this->windowContentVtx[currentVtx + 7].v.tc[0] = 0xD80;

-        if ((this->configMode == CM_COPY_ANIM_2) && (phi_t5 == this->copyDestFileIndex)) {
-            temp_t1 = this->fileNamesY[phi_t5] + 0x2C;
+        if ((this->configMode == CM_COPY_ANIM_2) && (buttonIndex == this->copyDestFileIndex)) {
+            yOffset = this->fileNamesY[buttonIndex] + 0x2C;
         } else if (((this->configMode == CM_COPY_ANIM_3) || (this->configMode == CM_COPY_ANIM_4)) &&
-                   (phi_t5 == this->copyDestFileIndex)) {
-            temp_t1 = this->buttonYOffsets[phi_t5] + phi_ra;
+                   (buttonIndex == this->copyDestFileIndex)) {
+            yOffset = this->buttonYOffsets[buttonIndex] + currentPosY;
         } else {
-            temp_t1 = phi_ra + this->buttonYOffsets[phi_t5] + this->fileNamesY[phi_t5];
+            yOffset = currentPosY + this->buttonYOffsets[buttonIndex] + this->fileNamesY[buttonIndex];
         }

-        this->windowContentVtx[phi_t2 + 8].v.ob[0] = this->windowContentVtx[phi_t2 + 10].v.ob[0] = phi_t0 + 0xA8;
+        // Button - Filename connectors
+        this->windowContentVtx[currentVtx + 8].v.ob[0] = this->windowContentVtx[currentVtx + 10].v.ob[0] = currentPosX + 0xA8;

-        this->windowContentVtx[phi_t2 + 9].v.ob[0] = this->windowContentVtx[phi_t2 + 11].v.ob[0] =
-            this->windowContentVtx[phi_t2 + 8].v.ob[0] + 0x2C;
+        this->windowContentVtx[currentVtx + 9].v.ob[0] = this->windowContentVtx[currentVtx + 11].v.ob[0] =
+            this->windowContentVtx[currentVtx + 8].v.ob[0] + 0x2C;

-        this->windowContentVtx[phi_t2 + 8].v.ob[1] = this->windowContentVtx[phi_t2 + 9].v.ob[1] = temp_t1;
-        this->windowContentVtx[phi_t2 + 10].v.ob[1] = this->windowContentVtx[phi_t2 + 11].v.ob[1] =
-            this->windowContentVtx[phi_t2 + 8].v.ob[1] - 0x10;
+        this->windowContentVtx[currentVtx + 8].v.ob[1] = this->windowContentVtx[currentVtx + 9].v.ob[1] = yOffset;
+        this->windowContentVtx[currentVtx + 10].v.ob[1] = this->windowContentVtx[currentVtx + 11].v.ob[1] =
+            this->windowContentVtx[currentVtx + 8].v.ob[1] - 0x10;

-        this->windowContentVtx[phi_t2 + 9].v.tc[0] = this->windowContentVtx[phi_t2 + 11].v.tc[0] = 0x580;
-        this->windowContentVtx[phi_t2 + 12].v.ob[0] = this->windowContentVtx[phi_t2 + 14].v.ob[0] = phi_t0 + 0x34;
-        this->windowContentVtx[phi_t2 + 13].v.ob[0] = this->windowContentVtx[phi_t2 + 15].v.ob[0] =
-            this->windowContentVtx[phi_t2 + 12].v.ob[0] + 0x18;
+        this->windowContentVtx[currentVtx + 9].v.tc[0] = this->windowContentVtx[currentVtx + 11].v.tc[0] = 0x580;
+        this->windowContentVtx[currentVtx + 12].v.ob[0] = this->windowContentVtx[currentVtx + 14].v.ob[0] = currentPosX + 0x34;
+        this->windowContentVtx[currentVtx + 13].v.ob[0] = this->windowContentVtx[currentVtx + 15].v.ob[0] =
+            this->windowContentVtx[currentVtx + 12].v.ob[0] + 0x18;

-        this->windowContentVtx[phi_t2 + 12].v.ob[1] = this->windowContentVtx[phi_t2 + 13].v.ob[1] =
-            this->buttonYOffsets[phi_t5] + phi_ra;
+        this->windowContentVtx[currentVtx + 12].v.ob[1] = this->windowContentVtx[currentVtx + 13].v.ob[1] =
+            this->buttonYOffsets[buttonIndex] + currentPosY;

-        this->windowContentVtx[phi_t2 + 14].v.ob[1] = this->windowContentVtx[phi_t2 + 15].v.ob[1] =
-            this->windowContentVtx[phi_t2 + 12].v.ob[1] - 0x10;
+        this->windowContentVtx[currentVtx + 14].v.ob[1] = this->windowContentVtx[currentVtx + 15].v.ob[1] =
+            this->windowContentVtx[currentVtx + 12].v.ob[1] - 0x10;

-        this->windowContentVtx[phi_t2 + 13].v.tc[0] = this->windowContentVtx[phi_t2 + 15].v.tc[0] = 0x300;
-        this->windowContentVtx[phi_t2 + 16].v.ob[0] = this->windowContentVtx[phi_t2 + 18].v.ob[0] = phi_t0 + 0x9C;
-        this->windowContentVtx[phi_t2 + 17].v.ob[0] = this->windowContentVtx[phi_t2 + 19].v.ob[0] =
-            this->windowContentVtx[phi_t2 + 16].v.ob[0] + 0x18;
+        this->windowContentVtx[currentVtx + 13].v.tc[0] = this->windowContentVtx[currentVtx + 15].v.tc[0] = 0x300;
+        this->windowContentVtx[currentVtx + 16].v.ob[0] = this->windowContentVtx[currentVtx + 18].v.ob[0] = currentPosX + 0x9C;
+        this->windowContentVtx[currentVtx + 17].v.ob[0] = this->windowContentVtx[currentVtx + 19].v.ob[0] =
+            this->windowContentVtx[currentVtx + 16].v.ob[0] + 0x18;

-        this->windowContentVtx[phi_t2 + 16].v.ob[1] = this->windowContentVtx[phi_t2 + 17].v.ob[1] =
-            this->buttonYOffsets[phi_t5] + phi_ra;
+        this->windowContentVtx[currentVtx + 16].v.ob[1] = this->windowContentVtx[currentVtx + 17].v.ob[1] =
+            this->buttonYOffsets[buttonIndex] + currentPosY;

-        this->windowContentVtx[phi_t2 + 18].v.ob[1] = this->windowContentVtx[phi_t2 + 19].v.ob[1] =
-            this->windowContentVtx[phi_t2 + 16].v.ob[1] - 0x10;
+        this->windowContentVtx[currentVtx + 18].v.ob[1] = this->windowContentVtx[currentVtx + 19].v.ob[1] =
+            this->windowContentVtx[currentVtx + 16].v.ob[1] - 0x10;

-        this->windowContentVtx[phi_t2 + 17].v.tc[0] = this->windowContentVtx[phi_t2 + 19].v.tc[0] = 0x300;
+        this->windowContentVtx[currentVtx + 17].v.tc[0] = this->windowContentVtx[currentVtx + 19].v.tc[0] = 0x300;
     }

-    phi_ra = 0x2C;
+    currentPosY = 0x2C;

-    for (phi_t5 = 0; phi_t5 < 3; phi_t5++, phi_ra -= WREG(38)) {
-        if (SLOT_OCCUPIED(sramCtx, phi_t5)) {
-            phi_t0 = this->windowPosX - WREG(39);
+    for (buttonIndex = 0; buttonIndex < 2; buttonIndex++, currentPosY -= WREG(38)) {
+        if (SLOT_OCCUPIED(sramCtx, buttonIndex)) {
+            currentPosX = this->windowPosX - WREG(39);

-            if ((this->configMode == 0xF) && (phi_t5 == this->copyDestFileIndex)) {
-                temp_t1 = this->fileNamesY[phi_t5] + 0x2C;
+            if ((this->configMode == CM_COPY_ANIM_2) && (buttonIndex == this->copyDestFileIndex)) {
+                // Adjust file info starting Y upwards when creating copied file
+                yOffset = this->fileNamesY[buttonIndex] + 0x2C;
             } else if (((this->configMode == CM_COPY_ANIM_3) || (this->configMode == CM_COPY_ANIM_4)) &&
-                       (phi_t5 == this->copyDestFileIndex)) {
-                temp_t1 = this->buttonYOffsets[phi_t5] + phi_ra;
+                       (buttonIndex == this->copyDestFileIndex)) {
+                // Adjust file info ending Y upwards when finishing copied file
+                yOffset = this->buttonYOffsets[buttonIndex] + currentPosY;
             } else {
-                temp_t1 = phi_ra + this->buttonYOffsets[phi_t5] + this->fileNamesY[phi_t5];
+                // Set normal file info Y position
+                yOffset = currentPosY + this->buttonYOffsets[buttonIndex] + this->fileNamesY[buttonIndex];
             }

-            temp_t1 += 2;
+            yOffset += 1;

-            for (phi_a1 = 0; phi_a1 < 8; phi_a1++, phi_t2 += 4, phi_t0 += WREG(40)) {
+            // Filename vertices
+            for (i = 0; i < 8; i++, currentVtx += 4, currentPosX += WREG(40)) {
 #if OOT_VERSION == PAL_1_1
-                fileNameChar = this->fileNames[phi_t5][phi_a1];
-                this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] =
-                    phi_t0 + 0x40 + WREG(41) + D_808124C0[fileNameChar];
+                fileNameChar = this->fileNames[buttonIndex][i];
+                this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] =
+                    currentPosX + 0x40 + WREG(41) + fileNameCharWidth[fileNameChar];
 #else
                 this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] =
                     phi_t0 + 0x40 + WREG(41);
 #endif
-                this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-                    this->windowContentVtx[phi_t2].v.ob[0] + WREG(42);
-                this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] = temp_t1 - 3;
-                this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-                    this->windowContentVtx[phi_t2].v.ob[1] - WREG(43);
+                this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+                    this->windowContentVtx[currentVtx].v.ob[0] + WREG(42);
+                this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] = yOffset - 3;
+                this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+                    this->windowContentVtx[currentVtx].v.ob[1] - WREG(43);
             }

-            phi_t0 = this->windowPosX - 14;
-            temp_t1 -= 0x16;
-
-            for (phi_a1 = 0; phi_a1 < 4; phi_a1++, phi_t2 += 4) {
-                this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = phi_t0;
-                this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-                    this->windowContentVtx[phi_t2].v.ob[0] + D_80812820[phi_a1];
-                this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] = temp_t1;
-                this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-                    this->windowContentVtx[phi_t2].v.ob[1] - D_80812828[phi_a1];
-                phi_t0 += D_80812818[phi_a1];
+            currentPosX = this->windowPosX - 14;
+            yOffset -= 0x16;
+
+            // Death counter vertices
+            for (i = 0; i < 4; i++, currentVtx += 4) {
+                this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = currentPosX;
+                this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+                    this->windowContentVtx[currentVtx].v.ob[0] + sDeathCounterTextureWidths[i];
+                this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] = yOffset;
+                this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+                    this->windowContentVtx[currentVtx].v.ob[1] - sDeathCounterTextureHeights[i];
+                currentPosX += sDeathCounterXOffsets[i];
             }

-            this->windowContentVtx[phi_t2 - 15].v.tc[0] = this->windowContentVtx[phi_t2 - 13].v.tc[0] = 0x400;
+            this->windowContentVtx[currentVtx - 15].v.tc[0] = this->windowContentVtx[currentVtx - 13].v.tc[0] = 0x400;

-            phi_t0 = this->windowPosX + 63;
-            temp_t1 += 4;
+            currentPosX = this->windowPosX + 63;
+            yOffset += 4;

-            for (phi_a1 = 0; phi_a1 < 20; phi_a1++, phi_t2 += 4, phi_t0 += 9) {
-                this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = phi_t0;
-                this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-                    this->windowContentVtx[phi_t2].v.ob[0] + 0xA;
-                this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] = temp_t1;
-                this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-                    this->windowContentVtx[phi_t2].v.ob[1] - 0xA;
+            // Hearts vertices
+            for (i = 0; i < 20; i++, currentVtx += 4, currentPosX += 9) {
+                this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = currentPosX;
+                this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+                    this->windowContentVtx[currentVtx].v.ob[0] + 0xA;
+                this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] = yOffset;
+                this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+                    this->windowContentVtx[currentVtx].v.ob[1] - 0xA;

-                if (phi_a1 == 9) {
-                    phi_t0 = this->windowPosX + 54;
-                    temp_t1 -= 8;
+                // Start second row
+                if (i == 9) {
+                    currentPosX = this->windowPosX + 54;
+                    yOffset -= 8;
                 }
             }

-            phi_t0 = this->windowPosX + 4;
-            temp_t1 -= 0xA;
-
-            for (phi_a1 = 0; phi_a1 < 10; phi_a1++, phi_t2 += 4, phi_t0 += 0x10) {
-                this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = phi_t0;
-                this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-                    this->windowContentVtx[phi_t2].v.ob[0] + 0x10;
-                this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] = temp_t1;
-                this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-                    this->windowContentVtx[phi_t2].v.ob[1] - 0x10;
+            currentPosX = this->windowPosX + 4;
+            yOffset -= 0xA;
+
+            // Dungeon rewards vertices
+            for (i = 0; i < 10; i++, currentVtx += 4, currentPosX += 0x10) {
+                this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = currentPosX;
+                this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+                    this->windowContentVtx[currentVtx].v.ob[0] + 0x10;
+                this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] = yOffset;
+                this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+                    this->windowContentVtx[currentVtx].v.ob[1] - 0x10;
             }
         } else {
-            phi_t2 += 0xA8;
+            currentVtx += 0xA8;
         }
     }

-    phi_t0 = this->windowPosX - 6;
-    phi_ra = -0xC;
-
-    for (phi_t5 = 0; phi_t5 < 2; phi_t5++, phi_t2 += 4, phi_ra -= 0x10) {
-        this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = phi_t0;
-        this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-            this->windowContentVtx[phi_t2].v.ob[0] + 0x40;
-        this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] =
-            this->buttonYOffsets[phi_t5 + 3] + phi_ra;
-        this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-            this->windowContentVtx[phi_t2].v.ob[1] - 0x10;
-        this->windowContentVtx[phi_t2 + 1].v.tc[0] = this->windowContentVtx[phi_t2 + 3].v.tc[0] = 0x800;
+    currentPosX = this->windowPosX - 6;
+    currentPosY = -0xC;
+
+    // Middle Button(s)
+    for (buttonIndex = 0; buttonIndex < 2; buttonIndex++, currentVtx += 4, currentPosY -= 0x10) {
+        this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = currentPosX;
+        this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+            this->windowContentVtx[currentVtx].v.ob[0] + 0x40;
+        this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] =
+            this->buttonYOffsets[buttonIndex + 3] + currentPosY;
+        this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+            this->windowContentVtx[currentVtx].v.ob[1] - 0x10;
+        this->windowContentVtx[currentVtx + 1].v.tc[0] = this->windowContentVtx[currentVtx + 3].v.tc[0] = 0x800;
     }

-    this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = phi_t0;
-    this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-        this->windowContentVtx[phi_t2].v.ob[0] + 0x40;
-    this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] =
-        this->buttonYOffsets[5] - 0x34;
-    this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-        this->windowContentVtx[phi_t2].v.ob[1] - 0x10;
-    this->windowContentVtx[phi_t2 + 1].v.tc[0] = this->windowContentVtx[phi_t2 + 3].v.tc[0] = 0x800;
+    // Bottom Button
+    this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = currentPosX;
+    this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+        this->windowContentVtx[currentVtx].v.ob[0] + 0x40;
+    this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] =
+        this->buttonYOffsets[4] - 0x34;
+    this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+        this->windowContentVtx[currentVtx].v.ob[1] - 0x10;
+    this->windowContentVtx[currentVtx + 1].v.tc[0] = this->windowContentVtx[currentVtx + 3].v.tc[0] = 0x800;

-    phi_t2 += 4;
+    currentVtx += 4;

+    // Submenu vertices
     if (((this->menuMode == FS_MENU_MODE_CONFIG) && (this->configMode >= CM_MAIN_MENU)) ||
         ((this->menuMode == FS_MENU_MODE_SELECT) && (this->selectMode == SM_CONFIRM_FILE))) {
         if (this->menuMode == FS_MENU_MODE_CONFIG) {
             if ((this->configMode == CM_SELECT_COPY_SOURCE) || (this->configMode == CM_SELECT_COPY_DEST) ||
                 (this->configMode == CM_ERASE_SELECT)) {
-                phi_t5 = D_8081283C[this->buttonIndex];
+                buttonIndex = sCopyEraseSelectButtonYOffsets[this->buttonIndex];
             } else if ((this->configMode == CM_ERASE_CONFIRM) || (this->configMode == CM_COPY_CONFIRM)) {
-                phi_t5 = D_80812844[this->buttonIndex];
+                buttonIndex = sCopyEraseConfirmButtonYOffsets[this->buttonIndex];
             } else {
-                phi_t5 = D_80812830[this->buttonIndex];
+                buttonIndex = sSelectMenuButtonYOffsets[this->buttonIndex];
             }
         } else {
-            phi_t5 = D_80812848[this->confirmButtonIndex];
+            buttonIndex = sFileSelectConfirmButtonYOffsets[this->confirmButtonIndex];
         }

-        this->windowContentVtx[phi_t2].v.ob[0] = this->windowContentVtx[phi_t2 + 2].v.ob[0] = this->windowPosX - 0xA;
-        this->windowContentVtx[phi_t2 + 1].v.ob[0] = this->windowContentVtx[phi_t2 + 3].v.ob[0] =
-            this->windowContentVtx[phi_t2].v.ob[0] + 0x48;
-        this->windowContentVtx[phi_t2].v.ob[1] = this->windowContentVtx[phi_t2 + 1].v.ob[1] =
-            this->windowContentVtx[phi_t5].v.ob[1] + 4;
-        this->windowContentVtx[phi_t2 + 2].v.ob[1] = this->windowContentVtx[phi_t2 + 3].v.ob[1] =
-            this->windowContentVtx[phi_t2].v.ob[1] - 0x18;
-        this->windowContentVtx[phi_t2 + 1].v.tc[0] = this->windowContentVtx[phi_t2 + 3].v.tc[0] = 0x900;
-        this->windowContentVtx[phi_t2 + 2].v.tc[1] = this->windowContentVtx[phi_t2 + 3].v.tc[1] = 0x300;
-    }
-
-    this->windowContentVtx[phi_t2 + 4].v.ob[0] = this->windowContentVtx[phi_t2 + 6].v.ob[0] = this->windowPosX + 0x3A;
-    this->windowContentVtx[phi_t2 + 5].v.ob[0] = this->windowContentVtx[phi_t2 + 7].v.ob[0] =
-        this->windowContentVtx[phi_t2 + 4].v.ob[0] + 0x80;
-    this->windowContentVtx[phi_t2 + 4].v.ob[1] = this->windowContentVtx[phi_t2 + 5].v.ob[1] =
-        this->windowContentVtx[D_80812830[this->warningButtonIndex]].v.ob[1];
-    this->windowContentVtx[phi_t2 + 6].v.ob[1] = this->windowContentVtx[phi_t2 + 7].v.ob[1] =
-        this->windowContentVtx[phi_t2 + 4].v.ob[1] - 0x10;
-    this->windowContentVtx[phi_t2 + 5].v.tc[0] = this->windowContentVtx[phi_t2 + 7].v.tc[0] = 0x1000;
+        this->windowContentVtx[currentVtx].v.ob[0] = this->windowContentVtx[currentVtx + 2].v.ob[0] = this->windowPosX - 0xA;
+        this->windowContentVtx[currentVtx + 1].v.ob[0] = this->windowContentVtx[currentVtx + 3].v.ob[0] =
+            this->windowContentVtx[currentVtx].v.ob[0] + 0x48;
+        this->windowContentVtx[currentVtx].v.ob[1] = this->windowContentVtx[currentVtx + 1].v.ob[1] =
+            this->windowContentVtx[buttonIndex].v.ob[1] + 4;
+        this->windowContentVtx[currentVtx + 2].v.ob[1] = this->windowContentVtx[currentVtx + 3].v.ob[1] =
+            this->windowContentVtx[currentVtx].v.ob[1] - 0x18;
+        this->windowContentVtx[currentVtx + 1].v.tc[0] = this->windowContentVtx[currentVtx + 3].v.tc[0] = 0x900;
+        this->windowContentVtx[currentVtx + 2].v.tc[1] = this->windowContentVtx[currentVtx + 3].v.tc[1] = 0x300;
+    }
+
+    // Warning messages
+    this->windowContentVtx[currentVtx + 4].v.ob[0] = this->windowContentVtx[currentVtx + 6].v.ob[0] = this->windowPosX + 0x3A;
+    this->windowContentVtx[currentVtx + 5].v.ob[0] = this->windowContentVtx[currentVtx + 7].v.ob[0] =
+        this->windowContentVtx[currentVtx + 4].v.ob[0] + 0x80;
+    this->windowContentVtx[currentVtx + 4].v.ob[1] = this->windowContentVtx[currentVtx + 5].v.ob[1] =
+        this->windowContentVtx[sSelectMenuButtonYOffsets[this->warningButtonIndex]].v.ob[1];
+    this->windowContentVtx[currentVtx + 6].v.ob[1] = this->windowContentVtx[currentVtx + 7].v.ob[1] =
+        this->windowContentVtx[currentVtx + 4].v.ob[1] - 0x10;
+    this->windowContentVtx[currentVtx + 5].v.tc[0] = this->windowContentVtx[currentVtx + 7].v.tc[0] = 0x1000;
 }

-static u16 D_8081284C[] = { 0x007C, 0x0124, 0x01CC };
+static u16 sFileNameVtx[] = { 0x0054, 0x00FC, 0x01A4 };

 static void* sQuestItemTextures[] = {
     gFileSelKokiriEmeraldTex,   gFileSelGoronRubyTex,       gFileSelZoraSapphireTex,
@@ -1211,7 +955,7 @@ void FileSelect_DrawFileInfo(GameState* thisx, s16 fileIndex, s16 isActive) {

     // draw file name
     if (this->nameAlpha[fileIndex] != 0) {
-        gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[D_8081284C[fileIndex]], 32, 0);
+        gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[sFileNameVtx[fileIndex]], 32, 0);
         gDPSetPrimColor(POLY_OPA_DISP++, 0x00, 0x00, sNamePrimColors[isActive][0], sNamePrimColors[isActive][1],
                         sNamePrimColors[isActive][2], this->nameAlpha[fileIndex]);

@@ -1226,7 +970,7 @@ void FileSelect_DrawFileInfo(GameState* thisx, s16 fileIndex, s16 isActive) {
         gDPSetCombineLERP(POLY_OPA_DISP++, 1, 0, PRIMITIVE, 0, TEXEL0, 0, PRIMITIVE, 0, 1, 0, PRIMITIVE, 0, TEXEL0, 0,
                           PRIMITIVE, 0);
         gDPSetPrimColor(POLY_OPA_DISP++, 0x00, 0x00, 255, 255, 255, this->fileInfoAlpha[fileIndex]);
-        gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[D_8081284C[fileIndex]] + 0x24, 12, 0);
+        gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[sFileNameVtx[fileIndex]] + 0x24, 12, 0);

         FileSelect_SplitNumber(this->deaths[fileIndex], &deathCountSplit[0], &deathCountSplit[1], &deathCountSplit[2]);

@@ -1276,7 +1020,7 @@ void FileSelect_DrawFileInfo(GameState* thisx, s16 fileIndex, s16 isActive) {
                 health -= 16;
             }

-            gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[D_8081284C[fileIndex] + vtxOffset] + 0x30, 4, 0);
+            gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[sFileNameVtx[fileIndex] + vtxOffset] + 0x30, 4, 0);
             POLY_OPA_DISP =
                 FileSelect_QuadTextureIA8(POLY_OPA_DISP, sHeartTextures[heartType][heartTextureIndex], 0x10, 0x10, 0);
         }
@@ -1287,7 +1031,7 @@ void FileSelect_DrawFileInfo(GameState* thisx, s16 fileIndex, s16 isActive) {
         // draw quest items
         for (vtxOffset = 0, j = 0; j < 9; j++, vtxOffset += 4) {
             if (this->questItems[fileIndex] & gBitFlags[sQuestItemFlags[j]]) {
-                gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[D_8081284C[fileIndex] + vtxOffset] + 0x80, 4, 0);
+                gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[sFileNameVtx[fileIndex] + vtxOffset] + 0x80, 4, 0);
                 gDPPipeSync(POLY_OPA_DISP++);
                 gDPSetPrimColor(POLY_OPA_DISP++, 0x00, 0x00, sQuestItemRed[j], sQuestItemGreen[j], sQuestItemBlue[j],
                                 this->fileInfoAlpha[fileIndex]);
@@ -1351,14 +1095,14 @@ static void* sWarningLabels[][5] = {
 #endif
 };

-static void* sFileButtonTextures[][3] = {
+static void* sFileButtonTextures[][2] = {
 #if OOT_NTSC
     { gFileSelFile1ButtonJPNTex, gFileSelFile2ButtonJPNTex, gFileSelFile3ButtonJPNTex },
     { gFileSelFile1ButtonENGTex, gFileSelFile2ButtonENGTex, gFileSelFile3ButtonENGTex },
 #else
-    { gFileSelFile1ButtonENGTex, gFileSelFile2ButtonENGTex, gFileSelFile3ButtonENGTex },
-    { gFileSelFile1ButtonGERTex, gFileSelFile2ButtonGERTex, gFileSelFile3ButtonGERTex },
-    { gFileSelFile1ButtonFRATex, gFileSelFile2ButtonFRATex, gFileSelFile3ButtonFRATex },
+    { gFileSelFile1ButtonENGTex, gFileSelFile2ButtonENGTex },
+    { gFileSelFile1ButtonGERTex, gFileSelFile2ButtonGERTex },
+    { gFileSelFile1ButtonFRATex, gFileSelFile2ButtonFRATex },
 #endif
 };

@@ -1416,7 +1160,7 @@ void FileSelect_DrawWindowContents(GameState* thisx) {
     gDPPipeSync(POLY_OPA_DISP++);

     // draw file info box (large box when a file is selected)
-    for (fileIndex = 0; fileIndex < 3; fileIndex++, temp += 20) {
+    for (fileIndex = 0; fileIndex < 2; fileIndex++, temp += 20) {
         gDPPipeSync(POLY_OPA_DISP++);
         gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, this->windowColor[0], this->windowColor[1], this->windowColor[2],
                         this->fileInfoAlpha[fileIndex]);
@@ -1430,7 +1174,7 @@ void FileSelect_DrawWindowContents(GameState* thisx) {
         }
     }

-    for (i = 0; i < 3; i++, temp += 20) {
+    for (i = 0; i < 2; i++, temp += 20) {
         // draw file button
         gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[temp], 20, 0);

@@ -1475,7 +1219,7 @@ void FileSelect_DrawWindowContents(GameState* thisx) {
     }

     // draw file info
-    for (fileIndex = 0; fileIndex < 3; fileIndex++) {
+    for (fileIndex = 0; fileIndex < 2; fileIndex++) {
         isActive = ((this->n64ddFlag == this->n64ddFlags[fileIndex]) || (this->nameBoxAlpha[fileIndex] == 0)) ? 0 : 1;
         FileSelect_DrawFileInfo(&this->state, fileIndex, isActive);
     }
@@ -1484,7 +1228,7 @@ void FileSelect_DrawWindowContents(GameState* thisx) {
     gDPSetCombineLERP(POLY_OPA_DISP++, PRIMITIVE, ENVIRONMENT, TEXEL0, ENVIRONMENT, TEXEL0, 0, PRIMITIVE, 0, PRIMITIVE,
                       ENVIRONMENT, TEXEL0, ENVIRONMENT, TEXEL0, 0, PRIMITIVE, 0);
     gDPSetEnvColor(POLY_OPA_DISP++, 0, 0, 0, 0);
-    gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[0x274], 20, 0);
+    gSPVertex(POLY_OPA_DISP++, &this->windowContentVtx[0x1A4], 20, 0);

     // draw primary action buttons (copy/erase)
     for (quadVtxIndex = 0, i = 0; i < 2; i++, quadVtxIndex += 4) {
@@ -1500,7 +1244,7 @@ void FileSelect_DrawWindowContents(GameState* thisx) {
     gDPPipeSync(POLY_OPA_DISP++);

     // draw confirm buttons (yes/quit)
-    for (quadVtxIndex = 0, i = 0; i < 2; i++, quadVtxIndex += 4) {
+    for (quadVtxIndex = 0, i = 0; i < 2; i++, quadVtxIndex += 8) {
         temp = this->confirmButtonTexIndices[i];

         gDPSetPrimColor(POLY_OPA_DISP++, 0, 0, this->windowColor[0], this->windowColor[1], this->windowColor[2],
@@ -1680,7 +1424,7 @@ void FileSelect_FadeMainToSelect(GameState* thisx) {
     SramContext* sramCtx = &this->sramCtx;
     s16 i;

-    for (i = 0; i < 3; i++) {
+    for (i = 0; i < 2; i++) {
         if (i != this->buttonIndex) {
             this->fileButtonAlpha[i] -= 25;
             this->actionButtonAlpha[FS_BTN_ACTION_COPY] = this->actionButtonAlpha[FS_BTN_ACTION_ERASE] =
@@ -1709,7 +1453,7 @@ void FileSelect_FadeMainToSelect(GameState* thisx) {
  * Update function for `SM_MOVE_FILE_TO_TOP`
  */
 void FileSelect_MoveSelectedFileToTop(GameState* thisx) {
-    static s16 fileYOffsets[] = { 0, 16, 32 }; // amount to move by to reach the top of the screen
+    static s16 fileYOffsets[] = { 0, 16 }; // amount to move by to reach the top of the screen
     FileSelectState* this = (FileSelectState*)thisx;
     s16 yStep;

@@ -1761,10 +1505,7 @@ void FileSelect_ConfirmFile(GameState* thisx) {
     if (CHECK_BTN_ALL(input->press.button, BTN_START) || (CHECK_BTN_ALL(input->press.button, BTN_A))) {
         if (this->confirmButtonIndex == FS_BTN_CONFIRM_YES) {
             Rumble_Request(300.0f, 180, 20, 100);
-            Audio_PlaySfxGeneral(NA_SE_SY_FSEL_DECIDE_L, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
-                                 &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
-            this->selectMode = SM_FADE_OUT;
-            func_800F6964(0xF);
+            this->selectMode = SM_LOAD_SAVE;
         } else {
             Audio_PlaySfxGeneral(NA_SE_SY_FSEL_CLOSE, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
                                  &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
@@ -1822,7 +1563,7 @@ void FileSelect_MoveSelectedFileToSlot(GameState* thisx) {
         this->buttonYOffsets[this->buttonIndex] = 0;
     }

-    for (i = 0; i < 3; i++) {
+    for (i = 0; i < 2; i++) {
         if (i != this->buttonIndex) {
             this->fileButtonAlpha[i] += 25;

@@ -1879,26 +1620,10 @@ void FileSelect_FadeOut(GameState* thisx) {
 void FileSelect_LoadGame(GameState* thisx) {
     FileSelectState* this = (FileSelectState*)thisx;

-#if DEBUG_FEATURES
-    if (this->buttonIndex == FS_BTN_SELECT_FILE_1) {
-        Audio_PlaySfxGeneral(NA_SE_SY_FSEL_DECIDE_L, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
-                             &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
-        gSaveContext.fileNum = this->buttonIndex;
-        Sram_OpenSave(&this->sramCtx);
-        gSaveContext.gameMode = GAMEMODE_NORMAL;
-        SET_NEXT_GAMESTATE(&this->state, MapSelect_Init, MapSelectState);
-        this->state.running = false;
-    } else
-#endif
-    {
-        Audio_PlaySfxGeneral(NA_SE_SY_FSEL_DECIDE_L, &gSfxDefaultPos, 4, &gSfxDefaultFreqAndVolScale,
-                             &gSfxDefaultFreqAndVolScale, &gSfxDefaultReverb);
-        gSaveContext.fileNum = this->buttonIndex;
-        Sram_OpenSave(&this->sramCtx);
-        gSaveContext.gameMode = GAMEMODE_NORMAL;
-        SET_NEXT_GAMESTATE(&this->state, Play_Init, PlayState);
-        this->state.running = false;
-    }
+    gSaveContext.fileNum = this->buttonIndex;
+    gSaveContext.gameMode = GAMEMODE_NORMAL;
+    SET_NEXT_GAMESTATE(&this->state, Randomizer_Init, RandomizerState);
+    this->state.running = false;

     gSaveContext.respawn[RESPAWN_MODE_DOWN].entranceIndex = ENTR_LOAD_OPENING;
     gSaveContext.respawnFlag = 0;
@@ -1978,7 +1703,8 @@ void FileSelect_LoadGame(GameState* thisx) {

 static void (*sSelectModeUpdateFuncs[])(GameState*) = {
     FileSelect_FadeMainToSelect, FileSelect_MoveSelectedFileToTop,  FileSelect_FadeInFileInfo, FileSelect_ConfirmFile,
-    FileSelect_FadeOutFileInfo,  FileSelect_MoveSelectedFileToSlot, FileSelect_FadeOut,        FileSelect_LoadGame,
+    FileSelect_FadeOutFileInfo,  FileSelect_MoveSelectedFileToSlot, FileSelect_LoadSave,       FileSelect_RotateToRandomizerSettings,
+    FileSelect_FadeOut,          FileSelect_LoadGame,
 };

 void FileSelect_SelectModeUpdate(GameState* thisx) {
@@ -2142,6 +1868,10 @@ void FileSelect_Main(GameState* thisx) {
     sFileSelectUpdateFuncs[this->menuMode](&this->state);
     sFileSelectDrawFuncs[this->menuMode](&this->state);

+    if ((this->configMode >= CM_MAIN_TO_RANDOMIZER)) {
+        FileSelect_DrawRandomizerMenu(&this->state);
+    }
+
     // do not draw controls text in the options menu
     if ((this->configMode <= CM_NAME_ENTRY_TO_MAIN) || (this->configMode >= CM_UNUSED_DELAY)) {
         Gfx_SetupDL_39Opa(this->state.gfxCtx);
@@ -2287,8 +2017,8 @@ void FileSelect_InitContext(GameState* thisx) {
     this->warningLabel = FS_WARNING_NONE;

     this->warningButtonIndex = this->buttonYOffsets[0] = this->buttonYOffsets[1] = this->buttonYOffsets[2] =
-        this->buttonYOffsets[3] = this->buttonYOffsets[4] = this->buttonYOffsets[5] = this->fileNamesY[0] =
-            this->fileNamesY[1] = this->fileNamesY[2] = 0;
+        this->buttonYOffsets[3] = this->buttonYOffsets[4] = this->fileNamesY[0] =
+            this->fileNamesY[1] = 0;

     this->unk_1CAD6[0] = 0;
     this->unk_1CAD6[1] = 3;
@@ -2326,8 +2056,7 @@ void FileSelect_InitContext(GameState* thisx) {
     gSaveContext.buttonStatus[0] = gSaveContext.buttonStatus[1] = gSaveContext.buttonStatus[2] =
         gSaveContext.buttonStatus[3] = gSaveContext.buttonStatus[4] = BTN_ENABLED;

-    this->n64ddFlags[0] = this->n64ddFlags[1] = this->n64ddFlags[2] = this->defense[0] = this->defense[1] =
-        this->defense[2] = 0;
+    this->n64ddFlags[0] = this->n64ddFlags[1] = this->n64ddFlags[2] = this->defense[0] = this->defense[1] = 0;

 #if PLATFORM_GC && OOT_PAL
     SsSram_ReadWrite(OS_K1_TO_PHYSICAL(0xA8000000), sramCtx->readBuff, SRAM_SIZE, OS_READ);