diff --git a/src/overlays/misc/ovl_kaleido_scope/z_kaleido_equipment.c b/src/overlays/misc/ovl_kaleido_scope/z_kaleido_equipment.c
index 75c942820..b4210c0f7 100644
--- a/src/overlays/misc/ovl_kaleido_scope/z_kaleido_equipment.c
+++ b/src/overlays/misc/ovl_kaleido_scope/z_kaleido_equipment.c
@@ -184,86 +184,103 @@ void KaleidoScope_DrawEquipment(PlayState* play) {

             cursorMoveResult = 0;
             do {
-                if (pauseCtx->stickAdjX < -30) {
-                    if (pauseCtx->cursorX[PAUSE_EQUIP] != 0) {
-                        pauseCtx->cursorX[PAUSE_EQUIP]--;
-                        pauseCtx->cursorPoint[PAUSE_EQUIP] -= 1;
-
-                        if (pauseCtx->cursorX[PAUSE_EQUIP] == 0) {
-                            if (pauseCtx->cursorY[PAUSE_EQUIP] == 0) {
-                                if (CUR_UPG_VALUE(UPG_BULLET_BAG) != 0) {
-                                    cursorMoveResult = 1;
-                                }
-                            } else {
-                                if (CUR_UPG_VALUE(pauseCtx->cursorY[PAUSE_EQUIP]) != 0) {
-                                    cursorMoveResult = 1;
+                if (pauseCtx->stickAdjX < -30) { // left pressed
+                    cursorX--;
+                    cursorPoint -= 1; // move left
+
+                    while (cursorX >= 0) {
+                        // If now on the leftmost column, check if current row upgrade obtained
+                        if (cursorX == 0) {
+                            if (cursorY == 0) { // if in top row
+                                if (CUR_UPG_VALUE(UPG_BULLET_BAG) != 0) { // if bullet bag obtained (normally middle of array)
+                                    cursorMoveResult = 1; // allow movement to cursor point
+                                    break;
                                 }
                             }
-                        } else {
-                            if (gBitFlags[pauseCtx->cursorPoint[PAUSE_EQUIP] - 1] &
-                                gSaveContext.save.info.inventory.equipment) {
-                                cursorMoveResult = 2;
+                            else {
+                                if (CUR_UPG_VALUE(cursorY) != 0) { // check upgrade obtained for slot
+                                    cursorMoveResult = 1; // allow movement to cursor point
+                                    break;
+                                }
                             }
                         }
-                    } else {
-                        pauseCtx->cursorX[PAUSE_EQUIP] = cursorX;
-                        pauseCtx->cursorY[PAUSE_EQUIP]++;

-                        if (pauseCtx->cursorY[PAUSE_EQUIP] >= 4) {
-                            pauseCtx->cursorY[PAUSE_EQUIP] = 0;
+                        // In other columns check if current row equipment obtained
+                        if (cursorPoint > 0 && gBitFlags[cursorPoint - 1] &
+                        gSaveContext.save.info.inventory.equipment) {
+                            cursorMoveResult = 2;
+                            break;
                         }

-                        pauseCtx->cursorPoint[PAUSE_EQUIP] =
-                            pauseCtx->cursorX[PAUSE_EQUIP] + (pauseCtx->cursorY[PAUSE_EQUIP] * 4);
+                        // Move cursor towards the bottom row
+                        cursorY += 1;
+                        cursorPoint += EQUIP_GRID_COLS;

-                        if (pauseCtx->cursorPoint[PAUSE_EQUIP] >= 16) {
-                            pauseCtx->cursorPoint[PAUSE_EQUIP] = pauseCtx->cursorX[PAUSE_EQUIP];
+                        // If trying to go below last row, loop back to the first row
+                        if (cursorY >= EQUIP_GRID_ROWS) {
+                            cursorY = 0;
+                        }
+                        if (cursorPoint >= EQUIP_GRID_ROWS * EQUIP_GRID_COLS) {
+                            cursorPoint = cursorX;
                         }

+                        // Looped over all rows in the column, move on to the next column
                         if (cursorY == pauseCtx->cursorY[PAUSE_EQUIP]) {
-                            pauseCtx->cursorX[PAUSE_EQUIP] = cursorX;
-                            pauseCtx->cursorPoint[PAUSE_EQUIP] = cursorPoint;
-                            KaleidoScope_MoveCursorToSpecialPos(play, PAUSE_CURSOR_PAGE_LEFT);
-                            cursorMoveResult = 3;
+                            cursorX--;
+                            cursorPoint = cursorX + cursorY * EQUIP_GRID_COLS;
                         }
                     }
+
+                    pauseCtx->cursorPoint[PAUSE_EQUIP] = cursorPoint;
+                    pauseCtx->cursorX[PAUSE_EQUIP] = cursorX;
+                    pauseCtx->cursorY[PAUSE_EQUIP] = cursorY;
+
+                    if (cursorX < 0) {
+                        KaleidoScope_MoveCursorToSpecialPos(play, PAUSE_CURSOR_PAGE_LEFT);
+                        cursorMoveResult = 3;
+                    }
                 } else if (pauseCtx->stickAdjX > 30) {
-                    if (pauseCtx->cursorX[PAUSE_EQUIP] < 3) {
-                        pauseCtx->cursorX[PAUSE_EQUIP]++;
-                        pauseCtx->cursorPoint[PAUSE_EQUIP] += 1;
+                    pauseCtx->cursorX[PAUSE_EQUIP]++;
+                    pauseCtx->cursorPoint[PAUSE_EQUIP] += 1;

-                        if (pauseCtx->cursorX[PAUSE_EQUIP] == 0) {
-                            if (CUR_UPG_VALUE(pauseCtx->cursorY[PAUSE_EQUIP]) != 0) {
-                                cursorMoveResult = 1;
-                            }
-                        } else {
-                            if (gBitFlags[pauseCtx->cursorPoint[PAUSE_EQUIP] - 1] &
-                                gSaveContext.save.info.inventory.equipment) {
-                                cursorMoveResult = 2;
-                            }
-                        }
-                    } else {
-                        pauseCtx->cursorX[PAUSE_EQUIP] = cursorX;
-                        pauseCtx->cursorY[PAUSE_EQUIP]++;
+                    cursorX = pauseCtx->cursorX[PAUSE_EQUIP];
+                    cursorY = pauseCtx->cursorY[PAUSE_EQUIP];
+                    cursorPoint = pauseCtx->cursorPoint[PAUSE_EQUIP];

-                        if (pauseCtx->cursorY[PAUSE_EQUIP] >= 4) {
-                            pauseCtx->cursorY[PAUSE_EQUIP] = 0;
+                    while (cursorX < EQUIP_GRID_COLS) {
+                        if (gBitFlags[cursorPoint - 1] &
+                            gSaveContext.save.info.inventory.equipment) {
+                            cursorMoveResult = 2;
+                            break;
                         }

-                        pauseCtx->cursorPoint[PAUSE_EQUIP] =
-                            pauseCtx->cursorX[PAUSE_EQUIP] + (pauseCtx->cursorY[PAUSE_EQUIP] * 4);
+                        // Move cursor towards the bottom row
+                        cursorY += 1;
+                        cursorPoint += EQUIP_GRID_COLS;

-                        if (pauseCtx->cursorPoint[PAUSE_EQUIP] >= 16) {
-                            pauseCtx->cursorPoint[PAUSE_EQUIP] = pauseCtx->cursorX[PAUSE_EQUIP];
+                        // If trying to go below last row, loop back to the first row
+                        if (cursorY >= EQUIP_GRID_ROWS) {
+                            cursorY = 0;
+                        }
+                        if (cursorPoint >= EQUIP_GRID_ROWS * EQUIP_GRID_COLS) {
+                            cursorPoint = cursorX;
                         }

+                        // Looped over all rows in the column, move on to the next column
                         if (cursorY == pauseCtx->cursorY[PAUSE_EQUIP]) {
-                            pauseCtx->cursorX[PAUSE_EQUIP] = cursorX;
-                            pauseCtx->cursorPoint[PAUSE_EQUIP] = cursorPoint;
-                            KaleidoScope_MoveCursorToSpecialPos(play, PAUSE_CURSOR_PAGE_RIGHT);
-                            cursorMoveResult = 3;
+                            cursorX++;
+                            cursorPoint = cursorX + cursorY * EQUIP_GRID_COLS;
                         }
                     }
+
+                    pauseCtx->cursorPoint[PAUSE_EQUIP] = cursorPoint;
+                    pauseCtx->cursorX[PAUSE_EQUIP] = cursorX;
+                    pauseCtx->cursorY[PAUSE_EQUIP] = cursorY;
+
+                    if (cursorX >= EQUIP_GRID_COLS) {
+                        KaleidoScope_MoveCursorToSpecialPos(play, PAUSE_CURSOR_PAGE_RIGHT);
+                        cursorMoveResult = 3;
+                    }
                 } else {
                     cursorMoveResult = 4;
                 }